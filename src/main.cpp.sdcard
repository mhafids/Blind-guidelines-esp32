#include <Arduino.h>
#include <SPI.h>
#include <SD.h>
#include <bits/stdc++.h>
// #include <vector>


File myFile;

using namespace std;

void printDirectory(File dir, int numTabs);
void setup() {
  // Open serial communications and wait for port to open:
  Serial.begin(115200);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }


  Serial.print("Initializing SD card...");

  // SPIClass spis = SPIClass(VSPI);
  
  if (!SD.begin(5,SPI, (F_CPU/2))) {
    Serial.println("initialization failed!");
    while (1);
  }
  Serial.print("initialization done. ");
  Serial.println(SD.cardType());

  // open the file. note that only one file can be open at a time,
  // so you have to close this one before opening another.
  myFile = SD.open("/test.txt", FILE_WRITE);

  // if the file opened okay, write to it:
  if (myFile) {
    Serial.print("Writing to test.txt...");
    myFile.println("testing 1, 2, 3.");
    // close the file:
    myFile.close();
    Serial.println("done.");
  } else {
    // if the file didn't open, print an error:
    Serial.println("error opening test.txt");
  }

  // re-open the file for reading:
  myFile = SD.open("/data-training/training.csv");
  if (myFile) {
    Serial.println("/data-training/training.csv: ");

    // read from the file until there's nothing else in it:
    // String txt = "";
    vector<vector<float>> tl;
    vector<float> m;
    String txt = "";
    while (myFile.available()) {
      // Serial.write(myFile.read());
      // txt += (char) myFile.read();
      char k = (char) myFile.read();
      if(k == ','){
        m.push_back(txt.toFloat());
        txt = "";
      } else if (k == '\n'){
        m.push_back(txt.toFloat());
        txt = "";
        tl.push_back(m);
        m.clear();
      } else {
        txt += k;
      }
    }
    // close the file:

    // Serial.println(txt);
    myFile.close();

    for (auto i : tl)
    {
      for (auto k : i)
      {
        Serial.print(k);
        Serial.print(" ");
      }
      Serial.println();      
    }
    

  } else {
    // if the file didn't open, print an error:
    Serial.println("error opening test.txt");
  }
}

void loop() {
  // nothing happens after setup
}

void printDirectory(File dir, int numTabs) {
  while (true) {

    File entry =  dir.openNextFile();
    if (! entry) {
      // no more files
      break;
    }
    for (uint8_t i = 0; i < numTabs; i++) {
      Serial.print('\t');
    }
    Serial.print(entry.name());
    if (entry.isDirectory()) {
      Serial.println("/");
      printDirectory(entry, numTabs + 1);
    } else {
      // files have sizes, directories do not
      Serial.print("\t\t");
      Serial.println(entry.size(), DEC);
    }
    entry.close();
  }
}
